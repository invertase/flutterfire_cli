name: all_packages
on:
  workflow_dispatch:
  pull_request_target:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
      - name: "Analyze"
        uses: invertase/github-action-dart-analyzer@v1
        with:
          fatal-infos: true
          fatal-warnings: true

  format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
      - name: "Check formatting"
        run: melos run format-check

  test_linux:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    environment: CI Environment
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0'
      - name: "Install Firebase CLI"
        run: |
          sudo npm i -g firebase-tools  
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite        
      - name: "Run Tests"
        run: melos run test --no-select
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}

  test_macos:
    runs-on: macos-latest
    timeout-minutes: 25
    environment: CI Environment
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0'
      - name: "Install Firebase CLI"
        run: |
          sudo npm i -g firebase-tools
      - name: Select Xcode version
        run: |
          sudo xcode-select -switch /Applications/Xcode_16.2.app/Contents/Developer
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite        
      - name: "Run Tests"
        run: melos run test --no-select
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}
  
  test_windows:
    runs-on: windows-latest
    timeout-minutes: 25
    environment: CI Environment
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    steps:
      - name: Get User Permission
        id: checkAccess
        uses: actions-cool/check-user-permission@v2
        with:
          require: write
          username: ${{ github.triggering_actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check User Permission
        if: steps.checkAccess.outputs.require-result == 'false'
        run: |
          echo "${{ github.triggering_actor }} does not have permissions on this repo."
          echo "Current permission level is ${{ steps.checkAccess.outputs.user-permission }}"
          echo "Job originally triggered by ${{ github.actor }}"
          exit 1
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: bluefireteam/melos-action@v2
        with:
          melos-version: '3.0.0'  
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        name: Install Node.js 18
        with:
          node-version: "18"
      - name: "Install Firebase CLI"
        run: |
          npm i -g firebase-tools
      - name: Install FlutterFire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite
      - name: "Run Tests"
        shell: bash
        run: |
          set -e
          melos run test --no-select
        env:
          FIREBASE_TOKEN: ${{ env.FIREBASE_TOKEN }}
